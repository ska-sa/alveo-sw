#!/bin/bash

#RvW, SARAO, 2022

SRC_DEV="xdma.*user|xclmgmt"

test ! -e configure && echo "run from ./configure location" && exit

#create a temp file
tmpfile=$(mktemp -q .60-xdma.rules.tmp.XXXX)
#create a file descriptor to write data to after closing temp file
exec 3>"$tmpfile"
#create another file descriptor for later reading
exec 4<"$tmpfile"
#delete temp file
rm "$tmpfile"


#find any installed xilinx alveo cards in pcie slots - either running the shell xrt or the xdma
DEVS=$(ls -l /sys/dev/char/ 2>/dev/null | grep -E ${SRC_DEV} 2>/dev/null | rev | cut -f3 -d'/' | rev)
INDEX=0

test -z "${DEVS}" && echo "No alveos found. Ensure Xilinx XRT is installed" && exec 3>&- && exec 4>&- && exit

for PCIE_ADDR in ${DEVS}; do
  echo -n ${PCIE_ADDR}
  #if type unset, set default to general 'alveo' type
  ALVEO_TYPE=${ALVEO_TYPE:-"alveo"}
  #now try to get the actual type
  DEV_ID=$(cat /sys/bus/pci/devices/${PCIE_ADDR}/device 2>/dev/null)
  if test ${DEV_ID} = "0x5020"; then
    ALVEO_TYPE="u50";
  elif test ${DEV_ID} = "0x9031"; then		#current SARAO bsp builds for u50
    ALVEO_TYPE="u50";
  elif test ${DEV_ID} = "0x9021"; then		#current SARAO bsp builds for u50
    ALVEO_TYPE="u50";
  elif test ${DEV_ID} = "0x500c"; then
    ALVEO_TYPE="u280";
  else
    ALVEO_TYPE="unknown";
  fi

  echo " ${ALVEO_TYPE}"

  echo "#alveo_${INDEX}" >&3
  echo "KERNEL==\"xdma\[0-9\]*\", KERNELS==\"${PCIE_ADDR}\", PROGRAM=\"/etc/udev/rules.d/alveo_namer.sh %k\", SYMLINK+=\"xdma/alveo_${INDEX}_${ALVEO_TYPE}/%c\",  MODE=\"0666\"" >&3
  echo "KERNEL==\"xdma\[0-9\]*_user\", KERNELS==\"${PCIE_ADDR}\", ACTION==\"add\", RUN+=\"/bin/ln -f -s /sys/bus/pci/devices/${PCIE_ADDR}/ /dev/xdma/alveo_${INDEX}_${ALVEO_TYPE}/pci\"" >&3
  echo "KERNEL==\"xdma\[0-9\]*_user\", KERNELS==\"${PCIE_ADDR}\", ACTION==\"remove\", RUN+=\"/bin/rm /dev/xdma/alveo_${INDEX}_${ALVEO_TYPE}/pci\"" >&3
  echo >&3
  INDEX=$((INDEX+1))
done

echo >&3
echo "#all alveos" >&3
echo "KERNEL==\"xdma\[0-9\]*_user\", ACTION==\"add\", RUN+=\"/usr/bin/sudo systemctl start tcpbs.service\"" >&3


UDEV_OUTPUT_PATH=./alveo-linux-env/xdma-udev-rules
test -e ${UDEV_OUTPUT_PATH}/60-xdma.rules && cp --backup=t ${UDEV_OUTPUT_PATH}/60-xdma.rules ${UDEV_OUTPUT_PATH}/60-xdma.rules.bak

#create Makefile.inc if it doesn't exist
#touch "${UDEV_OUTPUT_PATH}/60-xdma.rules"

#clean file
> ${UDEV_OUTPUT_PATH}/60-xdma.rules

#copy and append temp file into Makefile.inc
while read -u 4 line;do echo "$line" >> ${UDEV_OUTPUT_PATH}/60-xdma.rules;done

#close the file descriptor pointing to the temp file
exec 3>&-
exec 4>&-

echo "configuring pci to jtag-serial map...this may take a few minutes..."
cd alveo-utils
./alveo-jtag-list | grep "^>" | cut -d'>' -f 2 > ../alveo-program/alveo-pci-cfg
cd - >/dev/null
