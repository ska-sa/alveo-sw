#!/usr/bin/sudo bash

#RvW, SARAO, 2022

set -e

echo "WARNING: starting with root permissions!!"

#test dependencies (set -e will catch failures)
which tcpborphserver3 || (>&2 echo "missing dependencies - tcpborphserver"; exit 1)
which kcpcmd || (>&2 echo "missing dependencies - kcpcmd"; exit 1)
which kcpfpg || (>&2 echo "missing dependencies - kcpfpg"; exit 1)
test -d /opt/alveo/alveo-tcpbs-fs/ || (>&2 echo "missing dependencies - /opt/alveo/alveo-tcpbs-fs/"; exit 1)

BASE_PORT=7150
#BOF_DIR="/opt/alveo/alveo-tcpbs-fs/"
#BOF_DIR="../alveo-tcpbs-fs/"
#CFGPATH="/lib/firmware/tcpborphserver.bit"

#export PATH=$PATH:$(pwd)
export PATH=$PATH:$(pwd):${BOF_DIR}

#ALVEOS=$(./alveo-map)
ALVEOS=$(ls /dev/xdma/)

PORT=${BASE_PORT}

for CARD in ${ALVEOS}; do
#  PCIADDR=$(echo ${CARD} | cut -d'/' -f1)
  SERIAL=$(/opt/alveo/alveo-utils/alveo-serial /dev/xdma/${CARD}/user 2>/dev/null)
  echo $CARD $SERIAL

  PCIPATH=$(readlink -f /dev/xdma/${CARD}/pci)
  PCIADDR=$(echo ${PCIPATH} | rev | cut -d '/' -f1 | rev)
  PCITAG=${PCIADDR//[:.]/-}   #replace all ':' and '.' with '-'
  CFGPATH="/lib/firmware/tcpborphserver-${PCITAG}.bit"

  BOF_DIR="/tmp/alveo-tcpbs-fs-${PCITAG}/"
  if ! test -d ${BOF_DIR}; then
    mkdir ${BOF_DIR}
    cp /opt/alveo/alveo-tcpbs-fs/alveo-* ${BOF_DIR}
  fi

  #check if this tcpbs already running, since with each xdma.ko load, this script will be run
  STAT=0
  ps fax | grep [t]cpborphserver3 | grep ${PORT} &> /dev/null || STAT=1   #the || is so the process can continue (set -e)

  if [ ${STAT} -ne 1 ]
  then
    echo "tcpborphserver instance already running for ${CARD} with serial ${SERIAL} at port ${PORT}"
  else
    env PATH=$PATH:$(pwd):${BOF_DIR} tcpborphserver3 -p ${PORT} -l /dev/null -b ${BOF_DIR} -d /dev/xdma/${CARD}/user -u $((PORT+1)) -c ${CFGPATH}

    #TODO should we wait a bit here?
    sleep 0.5
  #  kcpcmd -s localhost:${PORT} version add alveo ${CARD} ${SERIAL}
    kcpcmd -s localhost:${PORT} version add alveo-card ${CARD}
    kcpcmd -s localhost:${PORT} version add alveo-serial ${SERIAL}
    kcpcmd -s localhost:${PORT} process alveo-reset reset\_this\_alveo
    kcpcmd -s localhost:${PORT} process alveo-program program\_this\_alveo
    kcpcmd -s localhost:${PORT} process alveo-memread read\_from\_a\_hex\_valued\_absolute\_address
    kcpcmd -s localhost:${PORT} process alveo-memwrite write\_to\_a\_hex\_valued\_absolute\_address
  fi
  PORT=$((PORT+2))
done
